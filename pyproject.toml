[tool.poetry]
name = "fast-zero"
version = "0.1.0"
description = ""
authors = ["ChrisMarSil <chris.mar.silva@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "3.12.*"
fastapi = "^0.111.0"
pydantic = {extras = ["email"], version = "^2.8.0"}
sqlalchemy = "^2.0.31"
pydantic-settings = "^2.3.4"
alembic = "^1.13.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-cov = "^5.0.0"
taskipy = "^1.13.0"
ruff = "^0.5.0"
httpx = "^0.27.0"

[tool.ruff]
line-length = 160
indent-width = 4
extend-exclude = ['migrations']
#exclude = [
#    ".bzr",
#    ".direnv",
#    ".eggs",
#    ".git",
#    ".git-rewrite",
#    ".hg",
#    ".ipynb_checkpoints",
#    ".mypy_cache",
#    ".nox",
#    ".pants.d",
#    ".pyenv",
#    ".pytest_cache",
#    ".pytype",
#    ".ruff_cache",
#    ".svn",
#    ".tox",
#    ".venv",
#    ".vscode",
#    "__pypackages__",
#    "_build",
#    "buck-out",
#    "build",
#    "dist",
#    "node_modules",
#    "site-packages",
#    "venv",
#    "migrations",
#]

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']
#select = [
#    "I",      # isort imports
#    "F",      # flake8 error
#    "E",      # pycodestyle error
#    "W",      # pycodestyle warning
#    'PL',
#    'PT',
#    "A",      # builtin shadowing
#    "B",      # flake8 bugbear
#    "BLE",    # aboid bare excepts
#    "C4",     # simplify comprehensions
#    "DTZ",    # datetime errors
#    "FBT",    # avoid boolean trap
#    "G",      # logging format
#    "N",      # conform to PEP8 naming rules
#    "RET",    # return values
#    "S",      # bandit
#    "TRY",    # exceptions antipatterns
#    "UP",     # upgade syntax
#    "YTT",    # wrong usage of sys.info
#    'SIM',
#    "E4",
#    "E7",
#    "E9",
#]
#ignore = ['F401', 'E402', 'F811']
#show-source = true
#fixable = ["ALL"]
#unfixable = []

[tool.ruff.format]
#preview = true
quote-style = "single"
#indent-style = "space"
#skip-magic-trailing-comma = false
#line-ending = "auto"

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

[tool.taskipy.tasks]
lint = 'ruff check . && ruff check . --diff'
format = 'ruff check . --fix && ruff format .'
run = 'fastapi dev app/main.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=app -vv'
post_test = 'coverage html'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
